<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="arraysort.project.board.app.user.mapper.UserMapper">

    <!-- 회원가입 -->
    <insert id="insertUser" parameterType="arraysort.project.board.app.user.domain.UserVO">
        insert into user(user_id,
                         user_password,
                         user_name,
                         access_level,
                         created_by)
        values (#{userId},
                #{userPassword},
                #{userName},
                #{accessLevel},
                #{createdBy})
    </insert>

    <!-- 아이디 중복 확인을 위한 카운트 -->
    <select id="selectUserCountByUserId" parameterType="String" resultType="int">
        select count(*)
        from user
        where user_id = #{userId}
    </select>

    <!-- 이름 중복 확인을 위한 카운트 -->
    <select id="selectUserCountByUserName" parameterType="String" resultType="int">
        select count(*)
        from user
        where user_name = #{userName}
    </select>

    <!-- 유저 세부내용 조회 -->
    <select id="selectUserByUserId" parameterType="String" resultType="arraysort.project.board.app.user.domain.UserVO">
        select user_id,
               user_password,
               user_name,
               access_level,
               access_time,
               activate_flag,
               created_by,
               created_at,
               updated_at,
               delete_flag
        from user
        where user_id = #{userId}
    </select>

    <!-- OAuth 회원가입 -->
    <insert id="insertOAuthUser" useGeneratedKeys="true" keyProperty="userId">
        insert into
            user (user_id,
                  user_name,
                  provider,
                  access_level,
                  created_by)
        values
            (#{userId}, #{userName}, #{oAuthProvider}, #{accessLevel}, #{createdBy})
    </insert>

    <!-- OAuth 로 회원가입 한 유저 조회 -->
    <select id="selectOAuthUserByUserId">
        select user_id,
               user_password,
               user_name,
               provider,
               access_level,
               activate_flag,
               created_by,
               created_at,
               updated_at,
               delete_flag
        from user
        where user_id = #{userId}
    </select>

</mapper>
